

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Dec 11 12:06:26 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22     0000                     
    23                           ; Version 2.40
    24                           ; Generated 17/11/2021 GMT
    25                           ; 
    26                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F877A Definitions
    56                           ; 
    57                           ; SFR Addresses
    58     0000                     	;# 
    59     0001                     	;# 
    60     0002                     	;# 
    61     0003                     	;# 
    62     0004                     	;# 
    63     0005                     	;# 
    64     0006                     	;# 
    65     0007                     	;# 
    66     0008                     	;# 
    67     0009                     	;# 
    68     000A                     	;# 
    69     000B                     	;# 
    70     000C                     	;# 
    71     000D                     	;# 
    72     000E                     	;# 
    73     000E                     	;# 
    74     000F                     	;# 
    75     0010                     	;# 
    76     0011                     	;# 
    77     0012                     	;# 
    78     0013                     	;# 
    79     0014                     	;# 
    80     0015                     	;# 
    81     0015                     	;# 
    82     0016                     	;# 
    83     0017                     	;# 
    84     0018                     	;# 
    85     0019                     	;# 
    86     001A                     	;# 
    87     001B                     	;# 
    88     001B                     	;# 
    89     001C                     	;# 
    90     001D                     	;# 
    91     001E                     	;# 
    92     001F                     	;# 
    93     0081                     	;# 
    94     0085                     	;# 
    95     0086                     	;# 
    96     0087                     	;# 
    97     0088                     	;# 
    98     0089                     	;# 
    99     008C                     	;# 
   100     008D                     	;# 
   101     008E                     	;# 
   102     0091                     	;# 
   103     0092                     	;# 
   104     0093                     	;# 
   105     0094                     	;# 
   106     0098                     	;# 
   107     0099                     	;# 
   108     009C                     	;# 
   109     009D                     	;# 
   110     009E                     	;# 
   111     009F                     	;# 
   112     010C                     	;# 
   113     010D                     	;# 
   114     010E                     	;# 
   115     010F                     	;# 
   116     018C                     	;# 
   117     018D                     	;# 
   118     0000                     	;# 
   119     0001                     	;# 
   120     0002                     	;# 
   121     0003                     	;# 
   122     0004                     	;# 
   123     0005                     	;# 
   124     0006                     	;# 
   125     0007                     	;# 
   126     0008                     	;# 
   127     0009                     	;# 
   128     000A                     	;# 
   129     000B                     	;# 
   130     000C                     	;# 
   131     000D                     	;# 
   132     000E                     	;# 
   133     000E                     	;# 
   134     000F                     	;# 
   135     0010                     	;# 
   136     0011                     	;# 
   137     0012                     	;# 
   138     0013                     	;# 
   139     0014                     	;# 
   140     0015                     	;# 
   141     0015                     	;# 
   142     0016                     	;# 
   143     0017                     	;# 
   144     0018                     	;# 
   145     0019                     	;# 
   146     001A                     	;# 
   147     001B                     	;# 
   148     001B                     	;# 
   149     001C                     	;# 
   150     001D                     	;# 
   151     001E                     	;# 
   152     001F                     	;# 
   153     0081                     	;# 
   154     0085                     	;# 
   155     0086                     	;# 
   156     0087                     	;# 
   157     0088                     	;# 
   158     0089                     	;# 
   159     008C                     	;# 
   160     008D                     	;# 
   161     008E                     	;# 
   162     0091                     	;# 
   163     0092                     	;# 
   164     0093                     	;# 
   165     0094                     	;# 
   166     0098                     	;# 
   167     0099                     	;# 
   168     009C                     	;# 
   169     009D                     	;# 
   170     009E                     	;# 
   171     009F                     	;# 
   172     010C                     	;# 
   173     010D                     	;# 
   174     010E                     	;# 
   175     010F                     	;# 
   176     018C                     	;# 
   177     018D                     	;# 
   178     0013                     _SSPBUF	set	19
   179     000C                     _PIR1bits	set	12
   180     0006                     _PORTBbits	set	6
   181     0006                     _PORTB	set	6
   182     0014                     _SSPCON	set	20
   183     0063                     _SSPIF	set	99
   184     0094                     _SSPSTATbits	set	148
   185     0091                     _SSPCON2bits	set	145
   186     0093                     _SSPADD	set	147
   187     0087                     _TRISC	set	135
   188     0086                     _TRISB	set	134
   189     048C                     _ACKEN	set	1164
   190     0489                     _RSEN	set	1161
   191     048A                     _PEN	set	1162
   192     0488                     _SEN	set	1160
   193                           
   194                           	psect	strings
   195     0003                     __pstrings:
   196     0003                     stringtab:
   197     0003                     __stringtab:
   198     0003                     stringcode:	
   199                           ;	String table - string pointers are 1 byte each
   200                           
   201     0003                     stringdir:
   202     0003  3000               	movlw	high stringdir
   203     0004  008A               	movwf	10
   204     0005  0804               	movf	4,w
   205     0006  0A84               	incf	4,f
   206     0007  0782               	addwf	2,f
   207     0008                     __stringbase:
   208     0008  3400               	retlw	0
   209     0009                     __end_of__stringtab:
   210     0009                     STR_3:
   211     0009  345F               	retlw	95	;'_'
   212     000A  3444               	retlw	68	;'D'
   213     000B  3453               	retlw	83	;'S'
   214     000C  3431               	retlw	49	;'1'
   215     000D  3433               	retlw	51	;'3'
   216     000E  3430               	retlw	48	;'0'
   217     000F  3437               	retlw	55	;'7'
   218     0010  3420               	retlw	32	;' '
   219     0011  3452               	retlw	82	;'R'
   220     0012  3454               	retlw	84	;'T'
   221     0013  3443               	retlw	67	;'C'
   222     0014  3420               	retlw	32	;' '
   223     0015  344D               	retlw	77	;'M'
   224     0016  344F               	retlw	79	;'O'
   225     0017  3444               	retlw	68	;'D'
   226     0018  3455               	retlw	85	;'U'
   227     0019  344C               	retlw	76	;'L'
   228     001A  3445               	retlw	69	;'E'
   229     001B  345F               	retlw	95	;'_'
   230     001C  3400               	retlw	0
   231     001D                     STR_1:
   232     001D  342D               	retlw	45	;'-'
   233     001E  3420               	retlw	32	;' '
   234     001F  3443               	retlw	67	;'C'
   235     0020  344C               	retlw	76	;'L'
   236     0021  344F               	retlw	79	;'O'
   237     0022  3443               	retlw	67	;'C'
   238     0023  344B               	retlw	75	;'K'
   239     0024  343A               	retlw	58	;':'
   240     0025  3420               	retlw	32	;' '
   241     0026  3400               	retlw	0
   242     0027                     STR_2:
   243     0027  342D               	retlw	45	;'-'
   244     0028  3420               	retlw	32	;' '
   245     0029  3444               	retlw	68	;'D'
   246     002A  3441               	retlw	65	;'A'
   247     002B  3454               	retlw	84	;'T'
   248     002C  3445               	retlw	69	;'E'
   249     002D  343A               	retlw	58	;':'
   250     002E  3420               	retlw	32	;' '
   251     002F  3400               	retlw	0
   252                           
   253                           	psect	cinit
   254     07F2                     start_initialization:	
   255                           ; #config settings
   256                           
   257     07F2                     __initialization:
   258                           
   259                           ; Clear objects allocated to COMMON
   260     07F2  01FC               	clrf	__pbssCOMMON& (0+127)
   261     07F3  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   262                           
   263                           ; Clear objects allocated to BANK0
   264     07F4  1283               	bcf	3,5	;RP0=0, select bank0
   265     07F5  1303               	bcf	3,6	;RP1=0, select bank0
   266     07F6  01A0               	clrf	__pbssBANK0& (0+127)
   267     07F7  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   268     07F8  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   269     07F9  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   270     07FA  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   271     07FB  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   272     07FC                     end_of_initialization:	
   273                           ;End of C runtime variable initialization code
   274                           
   275     07FC                     __end_of__initialization:
   276     07FC  0183               	clrf	3
   277     07FD  120A  118A  2E6D   	ljmp	_main	;jump to C main() function
   278                           
   279                           	psect	bssCOMMON
   280     007C                     __pbssCOMMON:
   281     007C                     ___min:
   282     007C                     	ds	1
   283     007D                     ___sec:
   284     007D                     	ds	1
   285                           
   286                           	psect	bssBANK0
   287     0020                     __pbssBANK0:
   288     0020                     ___con:
   289     0020                     	ds	1
   290     0021                     ___yr:
   291     0021                     	ds	1
   292     0022                     ___month:
   293     0022                     	ds	1
   294     0023                     ___date:
   295     0023                     	ds	1
   296     0024                     ___day:
   297     0024                     	ds	1
   298     0025                     ___hr:
   299     0025                     	ds	1
   300                           
   301                           	psect	cstackCOMMON
   302     0070                     __pcstackCOMMON:
   303     0070                     ?_int_Port:
   304     0070                     ??_int_Port:	
   305                           ; 1 bytes @ 0x0
   306                           
   307     0070                     ?_lcd_init:	
   308                           ; 1 bytes @ 0x0
   309                           
   310     0070                     ?_int_I2C:	
   311                           ; 1 bytes @ 0x0
   312                           
   313     0070                     ??_int_I2C:	
   314                           ; 1 bytes @ 0x0
   315                           
   316     0070                     ?_lcd_cmd:	
   317                           ; 1 bytes @ 0x0
   318                           
   319     0070                     ??_lcd_cmd:	
   320                           ; 1 bytes @ 0x0
   321                           
   322     0070                     ?_lcd_caracter:	
   323                           ; 1 bytes @ 0x0
   324                           
   325     0070                     ?_main:	
   326                           ; 1 bytes @ 0x0
   327                           
   328     0070                     ?_lcd_data:	
   329                           ; 1 bytes @ 0x0
   330                           
   331     0070                     ??_lcd_data:	
   332                           ; 1 bytes @ 0x0
   333                           
   334     0070                     ?_bcd_to_ascii:	
   335                           ; 1 bytes @ 0x0
   336                           
   337     0070                     ?_strlen:	
   338                           ; 1 bytes @ 0x0
   339                           
   340                           
   341                           ; 2 bytes @ 0x0
   342     0070                     	ds	2
   343     0072                     ??_strlen:
   344     0072                     lcd_cmd@cmd:	
   345                           ; 1 bytes @ 0x2
   346                           
   347     0072                     lcd_data@data:	
   348                           ; 1 bytes @ 0x2
   349                           
   350                           
   351                           ; 1 bytes @ 0x2
   352     0072                     	ds	1
   353     0073                     ??_lcd_init:
   354     0073                     ??_bcd_to_ascii:	
   355                           ; 1 bytes @ 0x3
   356                           
   357     0073                     strlen@s:	
   358                           ; 1 bytes @ 0x3
   359                           
   360                           
   361                           ; 1 bytes @ 0x3
   362     0073                     	ds	1
   363     0074                     bcd_to_ascii@value:
   364     0074                     strlen@cp:	
   365                           ; 1 bytes @ 0x4
   366                           
   367                           
   368                           ; 1 bytes @ 0x4
   369     0074                     	ds	1
   370     0075                     ??_lcd_caracter:
   371     0075                     bcd_to_ascii@bcd:	
   372                           ; 1 bytes @ 0x5
   373                           
   374                           
   375                           ; 1 bytes @ 0x5
   376     0075                     	ds	1
   377     0076                     ?_DS1307_read:
   378     0076                     lcd_caracter@num:	
   379                           ; 1 bytes @ 0x6
   380                           
   381     0076                     DS1307_read@register_address:	
   382                           ; 1 bytes @ 0x6
   383                           
   384                           
   385                           ; 1 bytes @ 0x6
   386     0076                     	ds	1
   387     0077                     ??_DS1307_read:
   388     0077                     lcd_caracter@i:	
   389                           ; 1 bytes @ 0x7
   390                           
   391     0077                     DS1307_read@slave_address:	
   392                           ; 1 bytes @ 0x7
   393                           
   394                           
   395                           ; 1 bytes @ 0x7
   396     0077                     	ds	1
   397     0078                     lcd_caracter@str:
   398                           
   399                           ; 1 bytes @ 0x8
   400     0078                     	ds	1
   401     0079                     ??_main:
   402                           
   403                           ; 1 bytes @ 0x9
   404     0079                     	ds	3
   405                           
   406                           	psect	maintext
   407     066D                     __pmaintext:	
   408 ;;
   409 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   410 ;;
   411 ;; *************** function _main *****************
   412 ;; Defined at:
   413 ;;		line 53 in file "main.c"
   414 ;; Parameters:    Size  Location     Type
   415 ;;		None
   416 ;; Auto vars:     Size  Location     Type
   417 ;;		None
   418 ;; Return value:  Size  Location     Type
   419 ;;                  1    wreg      void 
   420 ;; Registers used:
   421 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   422 ;; Tracked objects:
   423 ;;		On entry : B00/0
   424 ;;		On exit  : 0/0
   425 ;;		Unchanged: 0/0
   426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   427 ;;      Params:         0       0       0       0       0
   428 ;;      Locals:         0       0       0       0       0
   429 ;;      Temps:          3       0       0       0       0
   430 ;;      Totals:         3       0       0       0       0
   431 ;;Total ram usage:        3 bytes
   432 ;; Hardware stack levels required when called: 3
   433 ;; This function calls:
   434 ;;		_DS1307_read
   435 ;;		_int_I2C
   436 ;;		_int_Port
   437 ;;		_lcd_caracter
   438 ;;		_lcd_cmd
   439 ;;		_lcd_init
   440 ;; This function is called by:
   441 ;;		Startup code after reset
   442 ;; This function uses a non-reentrant model
   443 ;;
   444                           
   445     066D                     _main:	
   446                           ;psect for function _main
   447                           
   448     066D                     l1181:	
   449                           ;incstack = 0
   450                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   451                           
   452                           
   453                           ;main.c: 54:     int_Port();
   454     066D  120A  118A  2577  120A  118A  	fcall	_int_Port
   455                           
   456                           ;main.c: 55:     lcd_init();
   457     0672  120A  118A  25A1  120A  118A  	fcall	_lcd_init
   458                           
   459                           ;main.c: 56:     int_I2C();
   460     0677  120A  118A  257D  120A  118A  	fcall	_int_I2C
   461                           
   462                           ;main.c: 58:     lcd_cmd(0x80);
   463     067C  3080               	movlw	128
   464     067D  120A  118A  263C  120A  118A  	fcall	_lcd_cmd
   465     0682                     l1183:
   466                           
   467                           ;main.c: 59:     lcd_caracter("- CLOCK: ");
   468     0682  3015               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   469     0683  120A  118A  25C0  120A  118A  	fcall	_lcd_caracter
   470     0688                     l1185:
   471                           
   472                           ;main.c: 60:     lcd_cmd(0xC0);
   473     0688  30C0               	movlw	192
   474     0689  120A  118A  263C  120A  118A  	fcall	_lcd_cmd
   475                           
   476                           ;main.c: 61:     lcd_caracter("- DATE: ");
   477     068E  301F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   478     068F  120A  118A  25C0  120A  118A  	fcall	_lcd_caracter
   479     0694                     l1187:
   480                           
   481                           ;main.c: 63:     _delay((unsigned long)((300)*(20000000/4000.0)));
   482     0694  3008               	movlw	8
   483     0695  00FB               	movwf	??_main+2
   484     0696  309D               	movlw	157
   485     0697  00FA               	movwf	??_main+1
   486     0698  3005               	movlw	5
   487     0699  00F9               	movwf	??_main
   488     069A                     u847:
   489     069A  0BF9               	decfsz	??_main,f
   490     069B  2E9A               	goto	u847
   491     069C  0BFA               	decfsz	??_main+1,f
   492     069D  2E9A               	goto	u847
   493     069E  0BFB               	decfsz	??_main+2,f
   494     069F  2E9A               	goto	u847
   495     06A0  2EA1               	nop2
   496     06A1                     l1189:
   497                           
   498                           ;main.c: 65:      lcd_cmd(0xD4);
   499     06A1  30D4               	movlw	212
   500     06A2  120A  118A  263C  120A  118A  	fcall	_lcd_cmd
   501     06A7                     l1191:
   502                           
   503                           ;main.c: 66:     lcd_caracter("_DS1307 RTC MODULE_");
   504     06A7  3001               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   505     06A8  120A  118A  25C0  120A  118A  	fcall	_lcd_caracter
   506     06AD                     l1193:
   507                           
   508                           ;main.c: 68:         _delay((unsigned long)((300)*(20000000/4000.0)));
   509     06AD  3008               	movlw	8
   510     06AE  00FB               	movwf	??_main+2
   511     06AF  309D               	movlw	157
   512     06B0  00FA               	movwf	??_main+1
   513     06B1  3005               	movlw	5
   514     06B2  00F9               	movwf	??_main
   515     06B3                     u857:
   516     06B3  0BF9               	decfsz	??_main,f
   517     06B4  2EB3               	goto	u857
   518     06B5  0BFA               	decfsz	??_main+1,f
   519     06B6  2EB3               	goto	u857
   520     06B7  0BFB               	decfsz	??_main+2,f
   521     06B8  2EB3               	goto	u857
   522     06B9  2EBA               	nop2
   523                           
   524                           ;main.c: 69:         DS1307_read(0xD0,0);
   525     06BA  01F6               	clrf	DS1307_read@register_address
   526     06BB  30D0               	movlw	208
   527     06BC  120A  118A  26C5  120A  118A  	fcall	_DS1307_read
   528     06C1  2EAD               	goto	l1193
   529     06C2  120A  118A  2800   	ljmp	start
   530     06C5                     __end_of_main:
   531                           
   532                           	psect	text1
   533     05A1                     __ptext1:	
   534 ;; *************** function _lcd_init *****************
   535 ;; Defined at:
   536 ;;		line 112 in file "main.c"
   537 ;; Parameters:    Size  Location     Type
   538 ;;		None
   539 ;; Auto vars:     Size  Location     Type
   540 ;;		None
   541 ;; Return value:  Size  Location     Type
   542 ;;                  1    wreg      void 
   543 ;; Registers used:
   544 ;;		wreg, status,2, status,0, pclath, cstack
   545 ;; Tracked objects:
   546 ;;		On entry : 0/0
   547 ;;		On exit  : 0/0
   548 ;;		Unchanged: 0/0
   549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   550 ;;      Params:         0       0       0       0       0
   551 ;;      Locals:         0       0       0       0       0
   552 ;;      Temps:          0       0       0       0       0
   553 ;;      Totals:         0       0       0       0       0
   554 ;;Total ram usage:        0 bytes
   555 ;; Hardware stack levels used: 1
   556 ;; Hardware stack levels required when called: 1
   557 ;; This function calls:
   558 ;;		_lcd_cmd
   559 ;; This function is called by:
   560 ;;		_main
   561 ;; This function uses a non-reentrant model
   562 ;;
   563                           
   564     05A1                     _lcd_init:	
   565                           ;psect for function _lcd_init
   566                           
   567     05A1                     l1105:	
   568                           ;incstack = 0
   569                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
   570                           
   571                           
   572                           ;main.c: 113:     lcd_cmd(0x02);
   573     05A1  3002               	movlw	2
   574     05A2  120A  118A  263C  120A  118A  	fcall	_lcd_cmd
   575                           
   576                           ;main.c: 114:     lcd_cmd(0x28);
   577     05A7  3028               	movlw	40
   578     05A8  120A  118A  263C  120A  118A  	fcall	_lcd_cmd
   579                           
   580                           ;main.c: 115:     lcd_cmd(0x0C);
   581     05AD  300C               	movlw	12
   582     05AE  120A  118A  263C  120A  118A  	fcall	_lcd_cmd
   583                           
   584                           ;main.c: 116:     lcd_cmd(0x04);
   585     05B3  3004               	movlw	4
   586     05B4  120A  118A  263C  120A  118A  	fcall	_lcd_cmd
   587                           
   588                           ;main.c: 117:     lcd_cmd(0x01);
   589     05B9  3001               	movlw	1
   590     05BA  120A  118A  263C  120A  118A  	fcall	_lcd_cmd
   591     05BF                     l85:
   592     05BF  0008               	return
   593     05C0                     __end_of_lcd_init:
   594                           
   595                           	psect	text2
   596     05C0                     __ptext2:	
   597 ;; *************** function _lcd_caracter *****************
   598 ;; Defined at:
   599 ;;		line 119 in file "main.c"
   600 ;; Parameters:    Size  Location     Type
   601 ;;  str             1    wreg     PTR const unsigned char 
   602 ;;		 -> STR_3(20), STR_2(9), STR_1(10), 
   603 ;; Auto vars:     Size  Location     Type
   604 ;;  str             1    8[COMMON] PTR const unsigned char 
   605 ;;		 -> STR_3(20), STR_2(9), STR_1(10), 
   606 ;;  i               1    7[COMMON] unsigned char 
   607 ;;  num             1    6[COMMON] unsigned char 
   608 ;; Return value:  Size  Location     Type
   609 ;;                  1    wreg      void 
   610 ;; Registers used:
   611 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   612 ;; Tracked objects:
   613 ;;		On entry : 0/0
   614 ;;		On exit  : 0/0
   615 ;;		Unchanged: 0/0
   616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   617 ;;      Params:         0       0       0       0       0
   618 ;;      Locals:         3       0       0       0       0
   619 ;;      Temps:          1       0       0       0       0
   620 ;;      Totals:         4       0       0       0       0
   621 ;;Total ram usage:        4 bytes
   622 ;; Hardware stack levels used: 1
   623 ;; Hardware stack levels required when called: 2
   624 ;; This function calls:
   625 ;;		_lcd_data
   626 ;;		_strlen
   627 ;; This function is called by:
   628 ;;		_main
   629 ;; This function uses a non-reentrant model
   630 ;;
   631                           
   632     05C0                     _lcd_caracter:	
   633                           ;psect for function _lcd_caracter
   634                           
   635                           
   636                           ;incstack = 0
   637                           ; Regs used in _lcd_caracter: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   638                           ;lcd_caracter@str stored from wreg
   639     05C0  00F8               	movwf	lcd_caracter@str
   640     05C1                     l1107:
   641                           
   642                           ;main.c: 120:     unsigned char i ,num = strlen(str) ;
   643     05C1  0878               	movf	lcd_caracter@str,w
   644     05C2  120A  118A  2586  120A  118A  	fcall	_strlen
   645     05C7  0870               	movf	?_strlen,w
   646     05C8  00F6               	movwf	lcd_caracter@num
   647     05C9                     l1109:
   648                           
   649                           ;main.c: 121:     for(i=0;i<num;i++){
   650     05C9  01F7               	clrf	lcd_caracter@i
   651     05CA  2DDC               	goto	l1115
   652     05CB                     l1111:
   653                           
   654                           ;main.c: 122:         lcd_data(str[i]);
   655     05CB  0877               	movf	lcd_caracter@i,w
   656     05CC  0778               	addwf	lcd_caracter@str,w
   657     05CD  0084               	movwf	4
   658     05CE  120A  118A  2003  120A  118A  	fcall	stringdir
   659     05D3  120A  118A  260B  120A  118A  	fcall	_lcd_data
   660     05D8                     l1113:
   661                           
   662                           ;main.c: 123:     }
   663     05D8  3001               	movlw	1
   664     05D9  00F5               	movwf	??_lcd_caracter
   665     05DA  0875               	movf	??_lcd_caracter,w
   666     05DB  07F7               	addwf	lcd_caracter@i,f
   667     05DC                     l1115:
   668     05DC  0876               	movf	lcd_caracter@num,w
   669     05DD  0277               	subwf	lcd_caracter@i,w
   670     05DE  1C03               	skipc
   671     05DF  2DE1               	goto	u551
   672     05E0  2DE2               	goto	u550
   673     05E1                     u551:
   674     05E1  2DCB               	goto	l1111
   675     05E2                     u550:
   676     05E2                     l91:
   677     05E2  0008               	return
   678     05E3                     __end_of_lcd_caracter:
   679                           
   680                           	psect	text3
   681     0586                     __ptext3:	
   682 ;; *************** function _strlen *****************
   683 ;; Defined at:
   684 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\strlen.c"
   685 ;; Parameters:    Size  Location     Type
   686 ;;  s               1    wreg     PTR const unsigned char 
   687 ;;		 -> STR_3(20), STR_2(9), STR_1(10), 
   688 ;; Auto vars:     Size  Location     Type
   689 ;;  s               1    3[COMMON] PTR const unsigned char 
   690 ;;		 -> STR_3(20), STR_2(9), STR_1(10), 
   691 ;;  cp              1    4[COMMON] PTR const unsigned char 
   692 ;;		 -> STR_3(20), STR_2(9), STR_1(10), 
   693 ;; Return value:  Size  Location     Type
   694 ;;                  2    0[COMMON] unsigned int 
   695 ;; Registers used:
   696 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   697 ;; Tracked objects:
   698 ;;		On entry : 0/0
   699 ;;		On exit  : 0/0
   700 ;;		Unchanged: 0/0
   701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   702 ;;      Params:         2       0       0       0       0
   703 ;;      Locals:         2       0       0       0       0
   704 ;;      Temps:          1       0       0       0       0
   705 ;;      Totals:         5       0       0       0       0
   706 ;;Total ram usage:        5 bytes
   707 ;; Hardware stack levels used: 2
   708 ;; This function calls:
   709 ;;		Nothing
   710 ;; This function is called by:
   711 ;;		_lcd_caracter
   712 ;; This function uses a non-reentrant model
   713 ;;
   714                           
   715     0586                     _strlen:	
   716                           ;psect for function _strlen
   717                           
   718                           
   719                           ;incstack = 0
   720                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0+pclath]
   721                           ;strlen@s stored from wreg
   722     0586  00F3               	movwf	strlen@s
   723     0587                     l1077:
   724     0587  0873               	movf	strlen@s,w
   725     0588  00F4               	movwf	strlen@cp
   726     0589  2D8E               	goto	l1081
   727     058A                     l1079:
   728     058A  3001               	movlw	1
   729     058B  00F2               	movwf	??_strlen
   730     058C  0872               	movf	??_strlen,w
   731     058D  07F4               	addwf	strlen@cp,f
   732     058E                     l1081:
   733     058E  0874               	movf	strlen@cp,w
   734     058F  0084               	movwf	4
   735     0590  120A  118A  2003  120A  118A  	fcall	stringdir
   736     0595  3A00               	xorlw	0
   737     0596  1D03               	skipz
   738     0597  2D99               	goto	u531
   739     0598  2D9A               	goto	u530
   740     0599                     u531:
   741     0599  2D8A               	goto	l1079
   742     059A                     u530:
   743     059A                     l1083:
   744     059A  0873               	movf	strlen@s,w
   745     059B  0274               	subwf	strlen@cp,w
   746     059C  00F0               	movwf	?_strlen
   747     059D  01F1               	clrf	?_strlen+1
   748     059E  1BF0               	btfsc	?_strlen,7
   749     059F  03F1               	decf	?_strlen+1,f
   750     05A0                     l765:
   751     05A0  0008               	return
   752     05A1                     __end_of_strlen:
   753                           
   754                           	psect	text4
   755     0577                     __ptext4:	
   756 ;; *************** function _int_Port *****************
   757 ;; Defined at:
   758 ;;		line 74 in file "main.c"
   759 ;; Parameters:    Size  Location     Type
   760 ;;		None
   761 ;; Auto vars:     Size  Location     Type
   762 ;;		None
   763 ;; Return value:  Size  Location     Type
   764 ;;                  1    wreg      void 
   765 ;; Registers used:
   766 ;;		wreg, status,2
   767 ;; Tracked objects:
   768 ;;		On entry : 0/0
   769 ;;		On exit  : 0/0
   770 ;;		Unchanged: 0/0
   771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   772 ;;      Params:         0       0       0       0       0
   773 ;;      Locals:         0       0       0       0       0
   774 ;;      Temps:          0       0       0       0       0
   775 ;;      Totals:         0       0       0       0       0
   776 ;;Total ram usage:        0 bytes
   777 ;; Hardware stack levels used: 1
   778 ;; This function calls:
   779 ;;		Nothing
   780 ;; This function is called by:
   781 ;;		_main
   782 ;; This function uses a non-reentrant model
   783 ;;
   784                           
   785     0577                     _int_Port:	
   786                           ;psect for function _int_Port
   787                           
   788     0577                     l899:	
   789                           ;incstack = 0
   790                           ; Regs used in _int_Port: [wreg+status,2]
   791                           
   792                           
   793                           ;main.c: 75:     TRISB = 0x00;
   794     0577  1683               	bsf	3,5	;RP0=1, select bank1
   795     0578  1303               	bcf	3,6	;RP1=0, select bank1
   796     0579  0186               	clrf	6	;volatile
   797     057A                     l901:
   798                           
   799                           ;main.c: 76:     TRISC = 0xFF;
   800     057A  30FF               	movlw	255
   801     057B  0087               	movwf	7	;volatile
   802     057C                     l73:
   803     057C  0008               	return
   804     057D                     __end_of_int_Port:
   805                           
   806                           	psect	text5
   807     057D                     __ptext5:	
   808 ;; *************** function _int_I2C *****************
   809 ;; Defined at:
   810 ;;		line 78 in file "main.c"
   811 ;; Parameters:    Size  Location     Type
   812 ;;		None
   813 ;; Auto vars:     Size  Location     Type
   814 ;;		None
   815 ;; Return value:  Size  Location     Type
   816 ;;                  1    wreg      void 
   817 ;; Registers used:
   818 ;;		wreg
   819 ;; Tracked objects:
   820 ;;		On entry : 0/0
   821 ;;		On exit  : 0/0
   822 ;;		Unchanged: 0/0
   823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   824 ;;      Params:         0       0       0       0       0
   825 ;;      Locals:         0       0       0       0       0
   826 ;;      Temps:          0       0       0       0       0
   827 ;;      Totals:         0       0       0       0       0
   828 ;;Total ram usage:        0 bytes
   829 ;; Hardware stack levels used: 1
   830 ;; This function calls:
   831 ;;		Nothing
   832 ;; This function is called by:
   833 ;;		_main
   834 ;; This function uses a non-reentrant model
   835 ;;
   836                           
   837     057D                     _int_I2C:	
   838                           ;psect for function _int_I2C
   839                           
   840     057D                     l905:	
   841                           ;incstack = 0
   842                           ; Regs used in _int_I2C: [wreg]
   843                           
   844                           
   845                           ;main.c: 79:     SSPADD = 49;
   846     057D  3031               	movlw	49
   847     057E  1683               	bsf	3,5	;RP0=1, select bank1
   848     057F  1303               	bcf	3,6	;RP1=0, select bank1
   849     0580  0093               	movwf	19	;volatile
   850                           
   851                           ;main.c: 80:     SSPCON = 0x28;
   852     0581  3028               	movlw	40
   853     0582  1283               	bcf	3,5	;RP0=0, select bank0
   854     0583  1303               	bcf	3,6	;RP1=0, select bank0
   855     0584  0094               	movwf	20	;volatile
   856     0585                     l76:
   857     0585  0008               	return
   858     0586                     __end_of_int_I2C:
   859                           
   860                           	psect	text6
   861     06C5                     __ptext6:	
   862 ;; *************** function _DS1307_read *****************
   863 ;; Defined at:
   864 ;;		line 209 in file "main.c"
   865 ;; Parameters:    Size  Location     Type
   866 ;;  slave_addres    1    wreg     unsigned char 
   867 ;;  register_add    1    6[COMMON] unsigned char 
   868 ;; Auto vars:     Size  Location     Type
   869 ;;  slave_addres    1    7[COMMON] unsigned char 
   870 ;; Return value:  Size  Location     Type
   871 ;;                  1    wreg      void 
   872 ;; Registers used:
   873 ;;		wreg, status,2, status,0, pclath, cstack
   874 ;; Tracked objects:
   875 ;;		On entry : 0/0
   876 ;;		On exit  : 0/0
   877 ;;		Unchanged: 0/0
   878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   879 ;;      Params:         1       0       0       0       0
   880 ;;      Locals:         1       0       0       0       0
   881 ;;      Temps:          0       0       0       0       0
   882 ;;      Totals:         2       0       0       0       0
   883 ;;Total ram usage:        2 bytes
   884 ;; Hardware stack levels used: 1
   885 ;; Hardware stack levels required when called: 2
   886 ;; This function calls:
   887 ;;		_bcd_to_ascii
   888 ;;		_lcd_cmd
   889 ;;		_lcd_data
   890 ;; This function is called by:
   891 ;;		_main
   892 ;; This function uses a non-reentrant model
   893 ;;
   894                           
   895     06C5                     _DS1307_read:	
   896                           ;psect for function _DS1307_read
   897                           
   898                           
   899                           ;incstack = 0
   900                           ; Regs used in _DS1307_read: [wreg+status,2+status,0+pclath+cstack]
   901                           ;DS1307_read@slave_address stored from wreg
   902     06C5  00F7               	movwf	DS1307_read@slave_address
   903     06C6                     l1117:
   904                           
   905                           ;main.c: 210:     SSPCON2bits.SEN = 1 ;
   906     06C6  1683               	bsf	3,5	;RP0=1, select bank1
   907     06C7  1303               	bcf	3,6	;RP1=0, select bank1
   908     06C8  1411               	bsf	17,0	;volatile
   909     06C9                     l147:	
   910                           ;main.c: 211:     while(SEN);
   911                           
   912     06C9  1811               	btfsc	17,0	;volatile
   913     06CA  2ECC               	goto	u561
   914     06CB  2ECD               	goto	u560
   915     06CC                     u561:
   916     06CC  2EC9               	goto	l147
   917     06CD                     u560:
   918     06CD                     l149:
   919                           
   920                           ;main.c: 212:     PIR1bits.SSPIF = 0;
   921     06CD  1283               	bcf	3,5	;RP0=0, select bank0
   922     06CE  1303               	bcf	3,6	;RP1=0, select bank0
   923     06CF  118C               	bcf	12,3	;volatile
   924     06D0                     l1119:
   925                           
   926                           ;main.c: 214:     SSPBUF = slave_address ;
   927     06D0  0877               	movf	DS1307_read@slave_address,w
   928     06D1  0093               	movwf	19	;volatile
   929     06D2                     l150:	
   930                           ;main.c: 215:     while(!SSPIF);
   931                           
   932     06D2  1D8C               	btfss	12,3	;volatile
   933     06D3  2ED5               	goto	u571
   934     06D4  2ED6               	goto	u570
   935     06D5                     u571:
   936     06D5  2ED2               	goto	l150
   937     06D6                     u570:
   938     06D6                     l152:
   939                           
   940                           ;main.c: 216:     PIR1bits.SSPIF = 0;
   941     06D6  118C               	bcf	12,3	;volatile
   942                           
   943                           ;main.c: 217:     if(SSPCON2bits.ACKSTAT){
   944     06D7  1683               	bsf	3,5	;RP0=1, select bank1
   945     06D8  1303               	bcf	3,6	;RP1=0, select bank1
   946     06D9  1F11               	btfss	17,6	;volatile
   947     06DA  2EDC               	goto	u581
   948     06DB  2EDD               	goto	u580
   949     06DC                     u581:
   950     06DC  2EE3               	goto	l1123
   951     06DD                     u580:
   952     06DD                     l1121:
   953                           
   954                           ;main.c: 218:         SSPCON2bits.PEN = 1 ;
   955     06DD  1511               	bsf	17,2	;volatile
   956     06DE                     l154:	
   957                           ;main.c: 219:         while(PEN);
   958                           
   959     06DE  1911               	btfsc	17,2	;volatile
   960     06DF  2EE1               	goto	u591
   961     06E0  2EE2               	goto	u590
   962     06E1                     u591:
   963     06E1  2EDE               	goto	l154
   964     06E2                     u590:
   965     06E2  2FF1               	goto	l157
   966     06E3                     l1123:
   967                           
   968                           ;main.c: 223:     SSPBUF = register_address ;
   969     06E3  0876               	movf	DS1307_read@register_address,w
   970     06E4  1283               	bcf	3,5	;RP0=0, select bank0
   971     06E5  1303               	bcf	3,6	;RP1=0, select bank0
   972     06E6  0093               	movwf	19	;volatile
   973     06E7                     l158:	
   974                           ;main.c: 224:     while(!SSPIF);
   975                           
   976     06E7  1D8C               	btfss	12,3	;volatile
   977     06E8  2EEA               	goto	u601
   978     06E9  2EEB               	goto	u600
   979     06EA                     u601:
   980     06EA  2EE7               	goto	l158
   981     06EB                     u600:
   982     06EB                     l160:
   983                           
   984                           ;main.c: 225:     PIR1bits.SSPIF = 0;
   985     06EB  118C               	bcf	12,3	;volatile
   986                           
   987                           ;main.c: 226:     if(SSPCON2bits.ACKSTAT){
   988     06EC  1683               	bsf	3,5	;RP0=1, select bank1
   989     06ED  1303               	bcf	3,6	;RP1=0, select bank1
   990     06EE  1F11               	btfss	17,6	;volatile
   991     06EF  2EF1               	goto	u611
   992     06F0  2EF2               	goto	u610
   993     06F1                     u611:
   994     06F1  2EF8               	goto	l161
   995     06F2                     u610:
   996     06F2                     l1125:
   997                           
   998                           ;main.c: 227:         SSPCON2bits.PEN = 1 ;
   999     06F2  1511               	bsf	17,2	;volatile
  1000     06F3                     l162:	
  1001                           ;main.c: 228:         while(PEN);
  1002                           
  1003     06F3  1911               	btfsc	17,2	;volatile
  1004     06F4  2EF6               	goto	u621
  1005     06F5  2EF7               	goto	u620
  1006     06F6                     u621:
  1007     06F6  2EF3               	goto	l162
  1008     06F7                     u620:
  1009     06F7  2FF1               	goto	l157
  1010     06F8                     l161:	
  1011                           ;main.c: 230:     }
  1012                           
  1013                           
  1014                           ;main.c: 232:     SSPCON2bits.RSEN = 1 ;
  1015     06F8  1491               	bsf	17,1	;volatile
  1016     06F9                     l165:	
  1017                           ;main.c: 233:     while(RSEN);
  1018                           
  1019     06F9  1891               	btfsc	17,1	;volatile
  1020     06FA  2EFC               	goto	u631
  1021     06FB  2EFD               	goto	u630
  1022     06FC                     u631:
  1023     06FC  2EF9               	goto	l165
  1024     06FD                     u630:
  1025     06FD                     l167:
  1026                           
  1027                           ;main.c: 234:     PIR1bits.SSPIF = 0;
  1028     06FD  1283               	bcf	3,5	;RP0=0, select bank0
  1029     06FE  1303               	bcf	3,6	;RP1=0, select bank0
  1030     06FF  118C               	bcf	12,3	;volatile
  1031     0700                     l1127:
  1032                           
  1033                           ;main.c: 237:     SSPBUF = slave_address + 1 ;
  1034     0700  0877               	movf	DS1307_read@slave_address,w
  1035     0701  3E01               	addlw	1
  1036     0702  0093               	movwf	19	;volatile
  1037     0703                     l168:	
  1038                           ;main.c: 238:     while(!SSPIF);
  1039                           
  1040     0703  1D8C               	btfss	12,3	;volatile
  1041     0704  2F06               	goto	u641
  1042     0705  2F07               	goto	u640
  1043     0706                     u641:
  1044     0706  2F03               	goto	l168
  1045     0707                     u640:
  1046     0707                     l170:
  1047                           
  1048                           ;main.c: 239:     PIR1bits.SSPIF = 0;
  1049     0707  118C               	bcf	12,3	;volatile
  1050                           
  1051                           ;main.c: 240:     if(SSPCON2bits.ACKSTAT){
  1052     0708  1683               	bsf	3,5	;RP0=1, select bank1
  1053     0709  1303               	bcf	3,6	;RP1=0, select bank1
  1054     070A  1F11               	btfss	17,6	;volatile
  1055     070B  2F0D               	goto	u651
  1056     070C  2F0E               	goto	u650
  1057     070D                     u651:
  1058     070D  2F14               	goto	l171
  1059     070E                     u650:
  1060     070E                     l1129:
  1061                           
  1062                           ;main.c: 241:         SSPCON2bits.PEN = 1 ;
  1063     070E  1511               	bsf	17,2	;volatile
  1064     070F                     l172:	
  1065                           ;main.c: 242:         while(PEN);
  1066                           
  1067     070F  1911               	btfsc	17,2	;volatile
  1068     0710  2F12               	goto	u661
  1069     0711  2F13               	goto	u660
  1070     0712                     u661:
  1071     0712  2F0F               	goto	l172
  1072     0713                     u660:
  1073     0713  2FF1               	goto	l157
  1074     0714                     l171:	
  1075                           ;main.c: 244:     }
  1076                           
  1077                           
  1078                           ;main.c: 246:     SSPCON2bits.RCEN = 1 ;
  1079     0714  1591               	bsf	17,3	;volatile
  1080     0715                     l175:	
  1081                           ;main.c: 247:     while(!SSPSTATbits.BF);
  1082                           
  1083     0715  1C14               	btfss	20,0	;volatile
  1084     0716  2F18               	goto	u671
  1085     0717  2F19               	goto	u670
  1086     0718                     u671:
  1087     0718  2F15               	goto	l175
  1088     0719                     u670:
  1089     0719                     l1131:
  1090                           
  1091                           ;main.c: 248:     __sec = SSPBUF ;
  1092     0719  1283               	bcf	3,5	;RP0=0, select bank0
  1093     071A  1303               	bcf	3,6	;RP1=0, select bank0
  1094     071B  0813               	movf	19,w	;volatile
  1095     071C  00FD               	movwf	___sec
  1096     071D                     l1133:
  1097                           
  1098                           ;main.c: 250:     SSPCON2bits.ACKDT = 0;
  1099     071D  1683               	bsf	3,5	;RP0=1, select bank1
  1100     071E  1303               	bcf	3,6	;RP1=0, select bank1
  1101     071F  1291               	bcf	17,5	;volatile
  1102     0720                     l1135:
  1103                           
  1104                           ;main.c: 251:     SSPCON2bits.ACKEN = 1;
  1105     0720  1611               	bsf	17,4	;volatile
  1106     0721                     l178:	
  1107                           ;main.c: 252:     while(ACKEN);
  1108                           
  1109     0721  1A11               	btfsc	17,4	;volatile
  1110     0722  2F24               	goto	u681
  1111     0723  2F25               	goto	u680
  1112     0724                     u681:
  1113     0724  2F21               	goto	l178
  1114     0725                     u680:
  1115     0725                     l180:
  1116                           
  1117                           ;main.c: 254:     SSPCON2bits.RCEN = 1 ;
  1118     0725  1591               	bsf	17,3	;volatile
  1119     0726                     l181:	
  1120                           ;main.c: 255:     while(!SSPSTATbits.BF);
  1121                           
  1122     0726  1C14               	btfss	20,0	;volatile
  1123     0727  2F29               	goto	u691
  1124     0728  2F2A               	goto	u690
  1125     0729                     u691:
  1126     0729  2F26               	goto	l181
  1127     072A                     u690:
  1128     072A                     l1137:
  1129                           
  1130                           ;main.c: 256:     __min = SSPBUF ;
  1131     072A  1283               	bcf	3,5	;RP0=0, select bank0
  1132     072B  1303               	bcf	3,6	;RP1=0, select bank0
  1133     072C  0813               	movf	19,w	;volatile
  1134     072D  00FC               	movwf	___min
  1135     072E                     l1139:
  1136                           
  1137                           ;main.c: 258:     SSPCON2bits.ACKDT = 0;
  1138     072E  1683               	bsf	3,5	;RP0=1, select bank1
  1139     072F  1303               	bcf	3,6	;RP1=0, select bank1
  1140     0730  1291               	bcf	17,5	;volatile
  1141     0731                     l1141:
  1142                           
  1143                           ;main.c: 259:     SSPCON2bits.ACKEN = 1;
  1144     0731  1611               	bsf	17,4	;volatile
  1145     0732                     l184:	
  1146                           ;main.c: 260:     while(ACKEN);
  1147                           
  1148     0732  1A11               	btfsc	17,4	;volatile
  1149     0733  2F35               	goto	u701
  1150     0734  2F36               	goto	u700
  1151     0735                     u701:
  1152     0735  2F32               	goto	l184
  1153     0736                     u700:
  1154     0736                     l186:
  1155                           
  1156                           ;main.c: 262:     SSPCON2bits.RCEN = 1 ;
  1157     0736  1591               	bsf	17,3	;volatile
  1158     0737                     l187:	
  1159                           ;main.c: 263:     while(!SSPSTATbits.BF);
  1160                           
  1161     0737  1C14               	btfss	20,0	;volatile
  1162     0738  2F3A               	goto	u711
  1163     0739  2F3B               	goto	u710
  1164     073A                     u711:
  1165     073A  2F37               	goto	l187
  1166     073B                     u710:
  1167     073B                     l1143:
  1168                           
  1169                           ;main.c: 264:     __hr = SSPBUF ;
  1170     073B  1283               	bcf	3,5	;RP0=0, select bank0
  1171     073C  1303               	bcf	3,6	;RP1=0, select bank0
  1172     073D  0813               	movf	19,w	;volatile
  1173     073E  00A5               	movwf	___hr
  1174     073F                     l1145:
  1175                           
  1176                           ;main.c: 266:      SSPCON2bits.ACKDT = 0;
  1177     073F  1683               	bsf	3,5	;RP0=1, select bank1
  1178     0740  1303               	bcf	3,6	;RP1=0, select bank1
  1179     0741  1291               	bcf	17,5	;volatile
  1180     0742                     l1147:
  1181                           
  1182                           ;main.c: 267:     SSPCON2bits.ACKEN = 1;
  1183     0742  1611               	bsf	17,4	;volatile
  1184     0743                     l190:	
  1185                           ;main.c: 268:     while(ACKEN);
  1186                           
  1187     0743  1A11               	btfsc	17,4	;volatile
  1188     0744  2F46               	goto	u721
  1189     0745  2F47               	goto	u720
  1190     0746                     u721:
  1191     0746  2F43               	goto	l190
  1192     0747                     u720:
  1193     0747                     l192:
  1194                           
  1195                           ;main.c: 270:     SSPCON2bits.RCEN = 1 ;
  1196     0747  1591               	bsf	17,3	;volatile
  1197     0748                     l193:	
  1198                           ;main.c: 271:     while(!SSPSTATbits.BF);
  1199                           
  1200     0748  1C14               	btfss	20,0	;volatile
  1201     0749  2F4B               	goto	u731
  1202     074A  2F4C               	goto	u730
  1203     074B                     u731:
  1204     074B  2F48               	goto	l193
  1205     074C                     u730:
  1206     074C                     l1149:
  1207                           
  1208                           ;main.c: 272:     __day = SSPBUF ;
  1209     074C  1283               	bcf	3,5	;RP0=0, select bank0
  1210     074D  1303               	bcf	3,6	;RP1=0, select bank0
  1211     074E  0813               	movf	19,w	;volatile
  1212     074F  00A4               	movwf	___day
  1213     0750                     l1151:
  1214                           
  1215                           ;main.c: 274:     SSPCON2bits.ACKDT = 0;
  1216     0750  1683               	bsf	3,5	;RP0=1, select bank1
  1217     0751  1303               	bcf	3,6	;RP1=0, select bank1
  1218     0752  1291               	bcf	17,5	;volatile
  1219     0753                     l1153:
  1220                           
  1221                           ;main.c: 275:     SSPCON2bits.ACKEN = 1;
  1222     0753  1611               	bsf	17,4	;volatile
  1223     0754                     l196:	
  1224                           ;main.c: 276:     while(ACKEN);
  1225                           
  1226     0754  1A11               	btfsc	17,4	;volatile
  1227     0755  2F57               	goto	u741
  1228     0756  2F58               	goto	u740
  1229     0757                     u741:
  1230     0757  2F54               	goto	l196
  1231     0758                     u740:
  1232     0758                     l198:
  1233                           
  1234                           ;main.c: 278:     SSPCON2bits.RCEN = 1 ;
  1235     0758  1591               	bsf	17,3	;volatile
  1236     0759                     l199:	
  1237                           ;main.c: 279:     while(!SSPSTATbits.BF);
  1238                           
  1239     0759  1C14               	btfss	20,0	;volatile
  1240     075A  2F5C               	goto	u751
  1241     075B  2F5D               	goto	u750
  1242     075C                     u751:
  1243     075C  2F59               	goto	l199
  1244     075D                     u750:
  1245     075D                     l1155:
  1246                           
  1247                           ;main.c: 280:     __date = SSPBUF ;
  1248     075D  1283               	bcf	3,5	;RP0=0, select bank0
  1249     075E  1303               	bcf	3,6	;RP1=0, select bank0
  1250     075F  0813               	movf	19,w	;volatile
  1251     0760  00A3               	movwf	___date
  1252     0761                     l1157:
  1253                           
  1254                           ;main.c: 282:     SSPCON2bits.ACKDT = 0;
  1255     0761  1683               	bsf	3,5	;RP0=1, select bank1
  1256     0762  1303               	bcf	3,6	;RP1=0, select bank1
  1257     0763  1291               	bcf	17,5	;volatile
  1258     0764                     l1159:
  1259                           
  1260                           ;main.c: 283:     SSPCON2bits.ACKEN = 1;
  1261     0764  1611               	bsf	17,4	;volatile
  1262     0765                     l202:	
  1263                           ;main.c: 284:     while(ACKEN);
  1264                           
  1265     0765  1A11               	btfsc	17,4	;volatile
  1266     0766  2F68               	goto	u761
  1267     0767  2F69               	goto	u760
  1268     0768                     u761:
  1269     0768  2F65               	goto	l202
  1270     0769                     u760:
  1271     0769                     l204:
  1272                           
  1273                           ;main.c: 286:     SSPCON2bits.RCEN = 1 ;
  1274     0769  1591               	bsf	17,3	;volatile
  1275     076A                     l205:	
  1276                           ;main.c: 287:     while(!SSPSTATbits.BF);
  1277                           
  1278     076A  1C14               	btfss	20,0	;volatile
  1279     076B  2F6D               	goto	u771
  1280     076C  2F6E               	goto	u770
  1281     076D                     u771:
  1282     076D  2F6A               	goto	l205
  1283     076E                     u770:
  1284     076E                     l1161:
  1285                           
  1286                           ;main.c: 288:     __month = SSPBUF ;
  1287     076E  1283               	bcf	3,5	;RP0=0, select bank0
  1288     076F  1303               	bcf	3,6	;RP1=0, select bank0
  1289     0770  0813               	movf	19,w	;volatile
  1290     0771  00A2               	movwf	___month
  1291     0772                     l1163:
  1292                           
  1293                           ;main.c: 290:     SSPCON2bits.ACKDT = 0;
  1294     0772  1683               	bsf	3,5	;RP0=1, select bank1
  1295     0773  1303               	bcf	3,6	;RP1=0, select bank1
  1296     0774  1291               	bcf	17,5	;volatile
  1297     0775                     l1165:
  1298                           
  1299                           ;main.c: 291:     SSPCON2bits.ACKEN = 1;
  1300     0775  1611               	bsf	17,4	;volatile
  1301     0776                     l208:	
  1302                           ;main.c: 292:     while(ACKEN);
  1303                           
  1304     0776  1A11               	btfsc	17,4	;volatile
  1305     0777  2F79               	goto	u781
  1306     0778  2F7A               	goto	u780
  1307     0779                     u781:
  1308     0779  2F76               	goto	l208
  1309     077A                     u780:
  1310     077A                     l210:
  1311                           
  1312                           ;main.c: 294:     SSPCON2bits.RCEN = 1 ;
  1313     077A  1591               	bsf	17,3	;volatile
  1314     077B                     l211:	
  1315                           ;main.c: 295:     while(!SSPSTATbits.BF);
  1316                           
  1317     077B  1C14               	btfss	20,0	;volatile
  1318     077C  2F7E               	goto	u791
  1319     077D  2F7F               	goto	u790
  1320     077E                     u791:
  1321     077E  2F7B               	goto	l211
  1322     077F                     u790:
  1323     077F                     l1167:
  1324                           
  1325                           ;main.c: 296:     __yr = SSPBUF ;
  1326     077F  1283               	bcf	3,5	;RP0=0, select bank0
  1327     0780  1303               	bcf	3,6	;RP1=0, select bank0
  1328     0781  0813               	movf	19,w	;volatile
  1329     0782  00A1               	movwf	___yr
  1330     0783                     l1169:
  1331                           
  1332                           ;main.c: 298:     SSPCON2bits.ACKDT = 0;
  1333     0783  1683               	bsf	3,5	;RP0=1, select bank1
  1334     0784  1303               	bcf	3,6	;RP1=0, select bank1
  1335     0785  1291               	bcf	17,5	;volatile
  1336     0786                     l1171:
  1337                           
  1338                           ;main.c: 299:     SSPCON2bits.ACKEN = 1;
  1339     0786  1611               	bsf	17,4	;volatile
  1340     0787                     l214:	
  1341                           ;main.c: 300:     while(ACKEN);
  1342                           
  1343     0787  1A11               	btfsc	17,4	;volatile
  1344     0788  2F8A               	goto	u801
  1345     0789  2F8B               	goto	u800
  1346     078A                     u801:
  1347     078A  2F87               	goto	l214
  1348     078B                     u800:
  1349     078B                     l216:
  1350                           
  1351                           ;main.c: 302:     SSPCON2bits.RCEN = 1 ;
  1352     078B  1591               	bsf	17,3	;volatile
  1353     078C                     l217:	
  1354                           ;main.c: 303:     while(!SSPSTATbits.BF);
  1355                           
  1356     078C  1C14               	btfss	20,0	;volatile
  1357     078D  2F8F               	goto	u811
  1358     078E  2F90               	goto	u810
  1359     078F                     u811:
  1360     078F  2F8C               	goto	l217
  1361     0790                     u810:
  1362     0790                     l1173:
  1363                           
  1364                           ;main.c: 304:     __con = SSPBUF ;
  1365     0790  1283               	bcf	3,5	;RP0=0, select bank0
  1366     0791  1303               	bcf	3,6	;RP1=0, select bank0
  1367     0792  0813               	movf	19,w	;volatile
  1368     0793  00A0               	movwf	___con
  1369     0794                     l1175:
  1370                           
  1371                           ;main.c: 306:     SSPCON2bits.ACKDT = 0;
  1372     0794  1683               	bsf	3,5	;RP0=1, select bank1
  1373     0795  1303               	bcf	3,6	;RP1=0, select bank1
  1374     0796  1291               	bcf	17,5	;volatile
  1375     0797                     l1177:
  1376                           
  1377                           ;main.c: 307:     SSPCON2bits.ACKEN = 1;
  1378     0797  1611               	bsf	17,4	;volatile
  1379     0798                     l220:	
  1380                           ;main.c: 308:     while(ACKEN);
  1381                           
  1382     0798  1A11               	btfsc	17,4	;volatile
  1383     0799  2F9B               	goto	u821
  1384     079A  2F9C               	goto	u820
  1385     079B                     u821:
  1386     079B  2F98               	goto	l220
  1387     079C                     u820:
  1388     079C                     l222:
  1389                           
  1390                           ;main.c: 310:     SSPCON2bits.PEN = 1 ;
  1391     079C  1511               	bsf	17,2	;volatile
  1392     079D                     l223:	
  1393                           ;main.c: 311:     while(PEN);
  1394                           
  1395     079D  1911               	btfsc	17,2	;volatile
  1396     079E  2FA0               	goto	u831
  1397     079F  2FA1               	goto	u830
  1398     07A0                     u831:
  1399     07A0  2F9D               	goto	l223
  1400     07A1                     u830:
  1401     07A1                     l1179:
  1402                           
  1403                           ;main.c: 313:     lcd_cmd(0x88);
  1404     07A1  3088               	movlw	136
  1405     07A2  120A  118A  263C  120A  118A  	fcall	_lcd_cmd
  1406                           
  1407                           ;main.c: 314:     bcd_to_ascii(__hr);
  1408     07A7  1283               	bcf	3,5	;RP0=0, select bank0
  1409     07A8  1303               	bcf	3,6	;RP1=0, select bank0
  1410     07A9  0825               	movf	___hr,w
  1411     07AA  120A  118A  25E3  120A  118A  	fcall	_bcd_to_ascii
  1412                           
  1413                           ;main.c: 315:     lcd_data(':');
  1414     07AF  303A               	movlw	58
  1415     07B0  120A  118A  260B  120A  118A  	fcall	_lcd_data
  1416                           
  1417                           ;main.c: 316:     bcd_to_ascii(__min);
  1418     07B5  087C               	movf	___min,w
  1419     07B6  120A  118A  25E3  120A  118A  	fcall	_bcd_to_ascii
  1420                           
  1421                           ;main.c: 317:     lcd_data(':');
  1422     07BB  303A               	movlw	58
  1423     07BC  120A  118A  260B  120A  118A  	fcall	_lcd_data
  1424                           
  1425                           ;main.c: 318:     bcd_to_ascii(__sec);
  1426     07C1  087D               	movf	___sec,w
  1427     07C2  120A  118A  25E3  120A  118A  	fcall	_bcd_to_ascii
  1428                           
  1429                           ;main.c: 320:     lcd_cmd(0xC7);
  1430     07C7  30C7               	movlw	199
  1431     07C8  120A  118A  263C  120A  118A  	fcall	_lcd_cmd
  1432                           
  1433                           ;main.c: 321:     bcd_to_ascii(__date);
  1434     07CD  1283               	bcf	3,5	;RP0=0, select bank0
  1435     07CE  1303               	bcf	3,6	;RP1=0, select bank0
  1436     07CF  0823               	movf	___date,w
  1437     07D0  120A  118A  25E3  120A  118A  	fcall	_bcd_to_ascii
  1438                           
  1439                           ;main.c: 322:     lcd_data('/');
  1440     07D5  302F               	movlw	47
  1441     07D6  120A  118A  260B  120A  118A  	fcall	_lcd_data
  1442                           
  1443                           ;main.c: 323:     bcd_to_ascii(__month);
  1444     07DB  1283               	bcf	3,5	;RP0=0, select bank0
  1445     07DC  1303               	bcf	3,6	;RP1=0, select bank0
  1446     07DD  0822               	movf	___month,w
  1447     07DE  120A  118A  25E3  120A  118A  	fcall	_bcd_to_ascii
  1448                           
  1449                           ;main.c: 324:     lcd_data('/');
  1450     07E3  302F               	movlw	47
  1451     07E4  120A  118A  260B  120A  118A  	fcall	_lcd_data
  1452                           
  1453                           ;main.c: 325:     bcd_to_ascii(__yr);
  1454     07E9  1283               	bcf	3,5	;RP0=0, select bank0
  1455     07EA  1303               	bcf	3,6	;RP1=0, select bank0
  1456     07EB  0821               	movf	___yr,w
  1457     07EC  120A  118A  25E3  120A  118A  	fcall	_bcd_to_ascii
  1458     07F1                     l157:
  1459     07F1  0008               	return
  1460     07F2                     __end_of_DS1307_read:
  1461                           
  1462                           	psect	text7
  1463     063C                     __ptext7:	
  1464 ;; *************** function _lcd_cmd *****************
  1465 ;; Defined at:
  1466 ;;		line 83 in file "main.c"
  1467 ;; Parameters:    Size  Location     Type
  1468 ;;  cmd             1    wreg     unsigned char 
  1469 ;; Auto vars:     Size  Location     Type
  1470 ;;  cmd             1    2[COMMON] unsigned char 
  1471 ;; Return value:  Size  Location     Type
  1472 ;;                  1    wreg      void 
  1473 ;; Registers used:
  1474 ;;		wreg, status,2, status,0
  1475 ;; Tracked objects:
  1476 ;;		On entry : 0/0
  1477 ;;		On exit  : 0/0
  1478 ;;		Unchanged: 0/0
  1479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1480 ;;      Params:         0       0       0       0       0
  1481 ;;      Locals:         1       0       0       0       0
  1482 ;;      Temps:          2       0       0       0       0
  1483 ;;      Totals:         3       0       0       0       0
  1484 ;;Total ram usage:        3 bytes
  1485 ;; Hardware stack levels used: 1
  1486 ;; This function calls:
  1487 ;;		Nothing
  1488 ;; This function is called by:
  1489 ;;		_main
  1490 ;;		_lcd_init
  1491 ;;		_DS1307_read
  1492 ;; This function uses a non-reentrant model
  1493 ;;
  1494                           
  1495     063C                     _lcd_cmd:	
  1496                           ;psect for function _lcd_cmd
  1497                           
  1498                           
  1499                           ;incstack = 0
  1500                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0]
  1501                           ;lcd_cmd@cmd stored from wreg
  1502     063C  00F2               	movwf	lcd_cmd@cmd
  1503     063D                     l1053:
  1504                           
  1505                           ;main.c: 85:     PORTB = (cmd & 0xF0);
  1506     063D  0872               	movf	lcd_cmd@cmd,w
  1507     063E  39F0               	andlw	240
  1508     063F  1283               	bcf	3,5	;RP0=0, select bank0
  1509     0640  1303               	bcf	3,6	;RP1=0, select bank0
  1510     0641  0086               	movwf	6	;volatile
  1511     0642                     l1055:
  1512                           
  1513                           ;main.c: 86:     PORTBbits.RB2 = 1;
  1514     0642  1506               	bsf	6,2	;volatile
  1515     0643                     l1057:
  1516                           
  1517                           ;main.c: 87:     PORTBbits.RB1 = 0;
  1518     0643  1086               	bcf	6,1	;volatile
  1519     0644                     l1059:
  1520                           
  1521                           ;main.c: 88:     PORTBbits.RB0 = 0;
  1522     0644  1006               	bcf	6,0	;volatile
  1523     0645                     l1061:
  1524                           
  1525                           ;main.c: 89:     _delay((unsigned long)((2)*(20000000/4000.0)));
  1526     0645  300D               	movlw	13
  1527     0646  00F1               	movwf	??_lcd_cmd+1
  1528     0647  30FB               	movlw	251
  1529     0648  00F0               	movwf	??_lcd_cmd
  1530     0649                     u867:
  1531     0649  0BF0               	decfsz	??_lcd_cmd,f
  1532     064A  2E49               	goto	u867
  1533     064B  0BF1               	decfsz	??_lcd_cmd+1,f
  1534     064C  2E49               	goto	u867
  1535     064D  2E4E               	nop2
  1536     064E                     l1063:
  1537                           
  1538                           ;main.c: 90:     PORTBbits.RB2 = 0 ;
  1539     064E  1283               	bcf	3,5	;RP0=0, select bank0
  1540     064F  1303               	bcf	3,6	;RP1=0, select bank0
  1541     0650  1106               	bcf	6,2	;volatile
  1542     0651                     l1065:
  1543                           
  1544                           ;main.c: 91:     PORTB = ((cmd<<4)& 0xF0);
  1545     0651  0872               	movf	lcd_cmd@cmd,w
  1546     0652  00F0               	movwf	??_lcd_cmd
  1547     0653  3003               	movlw	3
  1548     0654                     u525:
  1549     0654  1003               	clrc
  1550     0655  0DF0               	rlf	??_lcd_cmd,f
  1551     0656  3EFF               	addlw	-1
  1552     0657  1D03               	skipz
  1553     0658  2E54               	goto	u525
  1554     0659  1003               	clrc
  1555     065A  0D70               	rlf	??_lcd_cmd,w
  1556     065B  39F0               	andlw	240
  1557     065C  0086               	movwf	6	;volatile
  1558     065D                     l1067:
  1559                           
  1560                           ;main.c: 92:     PORTBbits.RB2 = 1;
  1561     065D  1506               	bsf	6,2	;volatile
  1562     065E                     l1069:
  1563                           
  1564                           ;main.c: 93:     PORTBbits.RB1 = 0;
  1565     065E  1086               	bcf	6,1	;volatile
  1566     065F                     l1071:
  1567                           
  1568                           ;main.c: 94:     PORTBbits.RB0 = 0;
  1569     065F  1006               	bcf	6,0	;volatile
  1570     0660                     l1073:
  1571                           
  1572                           ;main.c: 95:     _delay((unsigned long)((2)*(20000000/4000.0)));
  1573     0660  300D               	movlw	13
  1574     0661  00F1               	movwf	??_lcd_cmd+1
  1575     0662  30FB               	movlw	251
  1576     0663  00F0               	movwf	??_lcd_cmd
  1577     0664                     u877:
  1578     0664  0BF0               	decfsz	??_lcd_cmd,f
  1579     0665  2E64               	goto	u877
  1580     0666  0BF1               	decfsz	??_lcd_cmd+1,f
  1581     0667  2E64               	goto	u877
  1582     0668  2E69               	nop2
  1583     0669                     l1075:
  1584                           
  1585                           ;main.c: 96:     PORTBbits.RB2 = 0;
  1586     0669  1283               	bcf	3,5	;RP0=0, select bank0
  1587     066A  1303               	bcf	3,6	;RP1=0, select bank0
  1588     066B  1106               	bcf	6,2	;volatile
  1589     066C                     l79:
  1590     066C  0008               	return
  1591     066D                     __end_of_lcd_cmd:
  1592                           
  1593                           	psect	text8
  1594     05E3                     __ptext8:	
  1595 ;; *************** function _bcd_to_ascii *****************
  1596 ;; Defined at:
  1597 ;;		line 126 in file "main.c"
  1598 ;; Parameters:    Size  Location     Type
  1599 ;;  value           1    wreg     unsigned char 
  1600 ;; Auto vars:     Size  Location     Type
  1601 ;;  value           1    4[COMMON] unsigned char 
  1602 ;;  bcd             1    5[COMMON] unsigned char 
  1603 ;; Return value:  Size  Location     Type
  1604 ;;                  1    wreg      void 
  1605 ;; Registers used:
  1606 ;;		wreg, status,2, status,0, pclath, cstack
  1607 ;; Tracked objects:
  1608 ;;		On entry : 0/0
  1609 ;;		On exit  : 0/0
  1610 ;;		Unchanged: 0/0
  1611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1612 ;;      Params:         0       0       0       0       0
  1613 ;;      Locals:         2       0       0       0       0
  1614 ;;      Temps:          1       0       0       0       0
  1615 ;;      Totals:         3       0       0       0       0
  1616 ;;Total ram usage:        3 bytes
  1617 ;; Hardware stack levels used: 1
  1618 ;; Hardware stack levels required when called: 1
  1619 ;; This function calls:
  1620 ;;		_lcd_data
  1621 ;; This function is called by:
  1622 ;;		_DS1307_read
  1623 ;; This function uses a non-reentrant model
  1624 ;;
  1625                           
  1626     05E3                     _bcd_to_ascii:	
  1627                           ;psect for function _bcd_to_ascii
  1628                           
  1629                           
  1630                           ;incstack = 0
  1631                           ; Regs used in _bcd_to_ascii: [wreg+status,2+status,0+pclath+cstack]
  1632                           ;bcd_to_ascii@value stored from wreg
  1633     05E3  00F4               	movwf	bcd_to_ascii@value
  1634     05E4                     l1087:
  1635                           
  1636                           ;main.c: 127:     unsigned char bcd ;;main.c: 128:     bcd = value ;
  1637     05E4  0874               	movf	bcd_to_ascii@value,w
  1638     05E5  00F5               	movwf	bcd_to_ascii@bcd
  1639     05E6                     l1089:
  1640                           
  1641                           ;main.c: 129:     bcd = bcd&0xf0 ;
  1642     05E6  0875               	movf	bcd_to_ascii@bcd,w
  1643     05E7  39F0               	andlw	240
  1644     05E8  00F5               	movwf	bcd_to_ascii@bcd
  1645     05E9                     l1091:
  1646                           
  1647                           ;main.c: 130:     bcd = bcd>>4 ;
  1648     05E9  0875               	movf	bcd_to_ascii@bcd,w
  1649     05EA  00F3               	movwf	??_bcd_to_ascii
  1650     05EB  3004               	movlw	4
  1651     05EC                     u545:
  1652     05EC  1003               	clrc
  1653     05ED  0CF3               	rrf	??_bcd_to_ascii,f
  1654     05EE  3EFF               	addlw	-1
  1655     05EF  1D03               	skipz
  1656     05F0  2DEC               	goto	u545
  1657     05F1  0873               	movf	??_bcd_to_ascii,w
  1658     05F2  00F5               	movwf	bcd_to_ascii@bcd
  1659     05F3                     l1093:
  1660                           
  1661                           ;main.c: 131:     bcd = bcd|0x30 ;
  1662     05F3  0875               	movf	bcd_to_ascii@bcd,w
  1663     05F4  3830               	iorlw	48
  1664     05F5  00F5               	movwf	bcd_to_ascii@bcd
  1665     05F6                     l1095:
  1666                           
  1667                           ;main.c: 132:     lcd_data(bcd) ;
  1668     05F6  0875               	movf	bcd_to_ascii@bcd,w
  1669     05F7  120A  118A  260B  120A  118A  	fcall	_lcd_data
  1670     05FC                     l1097:
  1671                           
  1672                           ;main.c: 133:     bcd = value ;
  1673     05FC  0874               	movf	bcd_to_ascii@value,w
  1674     05FD  00F5               	movwf	bcd_to_ascii@bcd
  1675     05FE                     l1099:
  1676                           
  1677                           ;main.c: 134:     bcd = bcd&0x0f ;
  1678     05FE  0875               	movf	bcd_to_ascii@bcd,w
  1679     05FF  390F               	andlw	15
  1680     0600  00F5               	movwf	bcd_to_ascii@bcd
  1681     0601                     l1101:
  1682                           
  1683                           ;main.c: 135:     bcd = bcd|0x30 ;
  1684     0601  0875               	movf	bcd_to_ascii@bcd,w
  1685     0602  3830               	iorlw	48
  1686     0603  00F5               	movwf	bcd_to_ascii@bcd
  1687     0604                     l1103:
  1688                           
  1689                           ;main.c: 136:     lcd_data(bcd) ;
  1690     0604  0875               	movf	bcd_to_ascii@bcd,w
  1691     0605  120A  118A  260B  120A  118A  	fcall	_lcd_data
  1692     060A                     l94:
  1693     060A  0008               	return
  1694     060B                     __end_of_bcd_to_ascii:
  1695                           
  1696                           	psect	text9
  1697     060B                     __ptext9:	
  1698 ;; *************** function _lcd_data *****************
  1699 ;; Defined at:
  1700 ;;		line 98 in file "main.c"
  1701 ;; Parameters:    Size  Location     Type
  1702 ;;  data            1    wreg     unsigned char 
  1703 ;; Auto vars:     Size  Location     Type
  1704 ;;  data            1    2[COMMON] unsigned char 
  1705 ;; Return value:  Size  Location     Type
  1706 ;;                  1    wreg      void 
  1707 ;; Registers used:
  1708 ;;		wreg, status,2, status,0
  1709 ;; Tracked objects:
  1710 ;;		On entry : 0/0
  1711 ;;		On exit  : 0/0
  1712 ;;		Unchanged: 0/0
  1713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1714 ;;      Params:         0       0       0       0       0
  1715 ;;      Locals:         1       0       0       0       0
  1716 ;;      Temps:          2       0       0       0       0
  1717 ;;      Totals:         3       0       0       0       0
  1718 ;;Total ram usage:        3 bytes
  1719 ;; Hardware stack levels used: 1
  1720 ;; This function calls:
  1721 ;;		Nothing
  1722 ;; This function is called by:
  1723 ;;		_lcd_caracter
  1724 ;;		_bcd_to_ascii
  1725 ;;		_DS1307_read
  1726 ;; This function uses a non-reentrant model
  1727 ;;
  1728                           
  1729     060B                     _lcd_data:	
  1730                           ;psect for function _lcd_data
  1731                           
  1732                           
  1733                           ;incstack = 0
  1734                           ; Regs used in _lcd_data: [wreg+status,2+status,0]
  1735                           ;lcd_data@data stored from wreg
  1736     060B  00F2               	movwf	lcd_data@data
  1737     060C                     l1029:
  1738                           
  1739                           ;main.c: 99:     PORTB = (data & 0xF0);
  1740     060C  0872               	movf	lcd_data@data,w
  1741     060D  39F0               	andlw	240
  1742     060E  1283               	bcf	3,5	;RP0=0, select bank0
  1743     060F  1303               	bcf	3,6	;RP1=0, select bank0
  1744     0610  0086               	movwf	6	;volatile
  1745     0611                     l1031:
  1746                           
  1747                           ;main.c: 100:     PORTBbits.RB2 = 1;
  1748     0611  1506               	bsf	6,2	;volatile
  1749     0612                     l1033:
  1750                           
  1751                           ;main.c: 101:     PORTBbits.RB1 = 0;
  1752     0612  1086               	bcf	6,1	;volatile
  1753     0613                     l1035:
  1754                           
  1755                           ;main.c: 102:     PORTBbits.RB0 = 1;
  1756     0613  1406               	bsf	6,0	;volatile
  1757     0614                     l1037:
  1758                           
  1759                           ;main.c: 103:     _delay((unsigned long)((2)*(20000000/4000.0)));
  1760     0614  300D               	movlw	13
  1761     0615  00F1               	movwf	??_lcd_data+1
  1762     0616  30FB               	movlw	251
  1763     0617  00F0               	movwf	??_lcd_data
  1764     0618                     u887:
  1765     0618  0BF0               	decfsz	??_lcd_data,f
  1766     0619  2E18               	goto	u887
  1767     061A  0BF1               	decfsz	??_lcd_data+1,f
  1768     061B  2E18               	goto	u887
  1769     061C  2E1D               	nop2
  1770     061D                     l1039:
  1771                           
  1772                           ;main.c: 104:     PORTBbits.RB2 = 0 ;
  1773     061D  1283               	bcf	3,5	;RP0=0, select bank0
  1774     061E  1303               	bcf	3,6	;RP1=0, select bank0
  1775     061F  1106               	bcf	6,2	;volatile
  1776     0620                     l1041:
  1777                           
  1778                           ;main.c: 105:     PORTB = ((data<<4)& 0xF0);
  1779     0620  0872               	movf	lcd_data@data,w
  1780     0621  00F0               	movwf	??_lcd_data
  1781     0622  3003               	movlw	3
  1782     0623                     u515:
  1783     0623  1003               	clrc
  1784     0624  0DF0               	rlf	??_lcd_data,f
  1785     0625  3EFF               	addlw	-1
  1786     0626  1D03               	skipz
  1787     0627  2E23               	goto	u515
  1788     0628  1003               	clrc
  1789     0629  0D70               	rlf	??_lcd_data,w
  1790     062A  39F0               	andlw	240
  1791     062B  0086               	movwf	6	;volatile
  1792     062C                     l1043:
  1793                           
  1794                           ;main.c: 106:     PORTBbits.RB2 = 1;
  1795     062C  1506               	bsf	6,2	;volatile
  1796     062D                     l1045:
  1797                           
  1798                           ;main.c: 107:     PORTBbits.RB1 = 0;
  1799     062D  1086               	bcf	6,1	;volatile
  1800     062E                     l1047:
  1801                           
  1802                           ;main.c: 108:     PORTBbits.RB0 = 1;
  1803     062E  1406               	bsf	6,0	;volatile
  1804     062F                     l1049:
  1805                           
  1806                           ;main.c: 109:     _delay((unsigned long)((2)*(20000000/4000.0)));
  1807     062F  300D               	movlw	13
  1808     0630  00F1               	movwf	??_lcd_data+1
  1809     0631  30FB               	movlw	251
  1810     0632  00F0               	movwf	??_lcd_data
  1811     0633                     u897:
  1812     0633  0BF0               	decfsz	??_lcd_data,f
  1813     0634  2E33               	goto	u897
  1814     0635  0BF1               	decfsz	??_lcd_data+1,f
  1815     0636  2E33               	goto	u897
  1816     0637  2E38               	nop2
  1817     0638                     l1051:
  1818                           
  1819                           ;main.c: 110:     PORTBbits.RB2 = 0;
  1820     0638  1283               	bcf	3,5	;RP0=0, select bank0
  1821     0639  1303               	bcf	3,6	;RP1=0, select bank0
  1822     063A  1106               	bcf	6,2	;volatile
  1823     063B                     l82:
  1824     063B  0008               	return
  1825     063C                     __end_of_lcd_data:
  1826     007E                     btemp	set	126	;btemp
  1827     007E                     wtemp0	set	126
  1828                           
  1829                           	psect	idloc
  1830                           
  1831                           ;Config register IDLOC0 @ 0x2000
  1832                           ;	unspecified, using default values
  1833     2000                     	org	8192
  1834     2000  3FFF               	dw	16383
  1835                           
  1836                           ;Config register IDLOC1 @ 0x2001
  1837                           ;	unspecified, using default values
  1838     2001                     	org	8193
  1839     2001  3FFF               	dw	16383
  1840                           
  1841                           ;Config register IDLOC2 @ 0x2002
  1842                           ;	unspecified, using default values
  1843     2002                     	org	8194
  1844     2002  3FFF               	dw	16383
  1845                           
  1846                           ;Config register IDLOC3 @ 0x2003
  1847                           ;	unspecified, using default values
  1848     2003                     	org	8195
  1849     2003  3FFF               	dw	16383
  1850                           
  1851                           	psect	config
  1852                           
  1853                           ;Config register CONFIG @ 0x2007
  1854                           ;	Oscillator Selection bits
  1855                           ;	FOSC = EXTRC, RC oscillator
  1856                           ;	Watchdog Timer Enable bit
  1857                           ;	WDTE = OFF, WDT disabled
  1858                           ;	Power-up Timer Enable bit
  1859                           ;	PWRTE = OFF, PWRT disabled
  1860                           ;	Brown-out Reset Enable bit
  1861                           ;	BOREN = ON, BOR enabled
  1862                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1863                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  1864                           ;	Data EEPROM Memory Code Protection bit
  1865                           ;	CPD = OFF, Data EEPROM code protection off
  1866                           ;	Flash Program Memory Write Enable bits
  1867                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1868                           ;	In-Circuit Debugger Mode bit
  1869                           ;	DEBUG = 0x1, unprogrammed default
  1870                           ;	Flash Program Memory Code Protection bit
  1871                           ;	CP = OFF, Code protection off
  1872     2007                     	org	8199
  1873     2007  3FFB               	dw	16379

Data Sizes:
    Strings     39
    Constant    0
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80      0       6
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 20
		 -> STR_3(CODE[20]), STR_2(CODE[9]), STR_1(CODE[10]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 20
		 -> STR_3(CODE[20]), STR_2(CODE[9]), STR_1(CODE[10]), 

    lcd_caracter@str	PTR const unsigned char  size(1) Largest target is 20
		 -> STR_3(CODE[20]), STR_2(CODE[9]), STR_1(CODE[10]), 


Critical Paths under _main in COMMON

    _main->_lcd_caracter
    _lcd_init->_lcd_cmd
    _lcd_caracter->_strlen
    _DS1307_read->_bcd_to_ascii
    _bcd_to_ascii->_lcd_data

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     946
                                              9 COMMON     3     3      0
                        _DS1307_read
                            _int_I2C
                           _int_Port
                       _lcd_caracter
                            _lcd_cmd
                           _lcd_init
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0      44
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_caracter                                         4     4      0     379
                                              5 COMMON     4     4      0
                           _lcd_data
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _int_Port                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _int_I2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DS1307_read                                          2     1      1     479
                                              6 COMMON     2     1      1
                       _bcd_to_ascii
                            _lcd_cmd
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _bcd_to_ascii                                         3     3      0     249
                                              3 COMMON     3     3      0
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DS1307_read
     _bcd_to_ascii
       _lcd_data
     _lcd_cmd
     _lcd_data
   _int_I2C
   _int_Port
   _lcd_caracter
     _lcd_data
     _strlen
   _lcd_cmd
   _lcd_init
     _lcd_cmd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      14       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       6       5        7.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      14      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Dec 11 12:06:26 2022

                          pc 0002                 lcd_data@data 0072                  _SSPSTATbits 0094  
                         l73 057C                           l82 063B                           l91 05E2  
                         l76 0585                           l85 05BF                           l94 060A  
                         l79 066C                           fsr 0004                          l210 077A  
                        l202 0765                          l211 077B                          l220 0798  
                        l204 0769                          l205 076A                          l222 079C  
                        l214 0787                          l150 06D2                          l223 079D  
                        l216 078B                          l208 0776                          l160 06EB  
                        l152 06D6                          l217 078C                          l161 06F8  
                        l170 0707                          l162 06F3                          l154 06DE  
                        l171 0714                          l147 06C9                          l180 0725  
                        l172 070F                          l181 0726                          l165 06F9  
                        l157 07F1                          l149 06CD                          l190 0743  
                        l158 06E7                          l175 0715                          l167 06FD  
                        l192 0747                          l184 0732                          l168 0703  
                        l193 0748                          l186 0736                          l178 0721  
                        l187 0737                          l196 0754                          l198 0758  
                        l199 0759                          l901 057A                          l905 057D  
                        l765 05A0                          l899 0577                          u600 06EB  
                        _PEN 048A                          u601 06EA                          u610 06F2  
                        u530 059A                          u515 0623                          u611 06F1  
                        u531 0599                          u700 0736                          u620 06F7  
                        u525 0654                          u701 0735                          u621 06F6  
                        u710 073B                          u630 06FD                          u550 05E2  
                        u711 073A                          u631 06FC                          u551 05E1  
                        u800 078B                          u720 0747                          u640 0707  
                        u560 06CD                          u545 05EC                          u801 078A  
                        u721 0746                          u641 0706                          u561 06CC  
                        u810 0790                          u730 074C                          u650 070E  
                        u570 06D6                          u811 078F                          u731 074B  
                        u651 070D                          u571 06D5                          u820 079C  
                        u740 0758                          u660 0713                          u580 06DD  
                        _SEN 0488                          u821 079B                          u741 0757  
                        u661 0712                          u581 06DC                          u830 07A1  
                        u750 075D                          u670 0719                          u590 06E2  
                        u831 07A0                          u751 075C                          u671 0718  
                        u591 06E1                          u760 0769                          u680 0725  
                        u761 0768                          u681 0724                          u770 076E  
                        u690 072A                          u771 076D                          u691 0729  
                        u780 077A                          u781 0779                          u790 077F  
                        u791 077E                          u847 069A                          u857 06B3  
                        u867 0649                          u877 0664                          u887 0618  
                        u897 0633                lcd_caracter@i 0077                          fsr0 0004  
             ??_lcd_caracter 0075                         l1101 0601                         l1031 0611  
                       l1103 0604                         l1111 05CB                         l1041 0620  
                       l1033 0612                         l1121 06DD                         l1113 05D8  
                       l1105 05A1                         l1051 0638                         l1043 062C  
                       l1035 0613                         l1131 0719                         l1123 06E3  
                       l1115 05DC                         l1107 05C1                         l1045 062D  
                       l1037 0614                         l1029 060C                         l1061 0645  
                       l1053 063D                         l1141 0731                         l1133 071D  
                       l1125 06F2                         l1117 06C6                         l1109 05C9  
                       l1047 062E                         l1039 061D                         l1071 065F  
                       l1063 064E                         l1055 0642                         l1151 0750  
                       l1143 073B                         l1135 0720                         l1127 0700  
                       l1119 06D0                         l1049 062F                         l1073 0660  
                       l1065 0651                         l1057 0643                         l1161 076E  
                       l1153 0753                         l1145 073F                         l1137 072A  
                       l1129 070E                         l1081 058E                         l1091 05E9  
                       l1075 0669                         l1067 065D                         l1059 0644  
                       l1171 0786                         l1163 0772                         l1155 075D  
                       l1147 0742                         l1139 072E                         l1083 059A  
                       l1093 05F3                         l1069 065E                         l1173 0790  
                       l1165 0775                         l1157 0761                         l1149 074C  
                       l1077 0587                         l1181 066D                         l1095 05F6  
                       l1087 05E4                         l1175 0794                         l1167 077F  
                       l1159 0764                         l1079 058A                         l1191 06A7  
                       l1183 0682                         l1097 05FC                         l1089 05E6  
                       l1177 0797                         l1169 0783                         l1193 06AD  
                       l1185 0688                         l1099 05FE                         l1179 07A1  
                       l1187 0694                         l1189 06A1                         STR_1 001D  
                       STR_2 0027                         STR_3 0009                         _RSEN 0489  
                       ___hr 0025                         ___yr 0021                         _main 066D  
                       btemp 007E                         start 0000                        ?_main 0070  
                      _ACKEN 048C                        _PORTB 0006                        _TRISB 0086  
                      _TRISC 0087                        _SSPIF 0063              lcd_caracter@num 0076  
            lcd_caracter@str 0078              __end_of_lcd_cmd 066D                        ___day 0024  
                      ___con 0020                        ___min 007C                        ___sec 007D  
            __end_of_int_I2C 0586                        pclath 000A                        status 0003  
                      wtemp0 007E              __initialization 07F2                 __end_of_main 06C5  
               _bcd_to_ascii 05E3                       ??_main 0079                       _SSPADD 0093  
                     _SSPCON 0014                       _SSPBUF 0013             __end_of_lcd_data 063C  
           __end_of_lcd_init 05C0                       ___date 0023         __end_of_lcd_caracter 05E3  
           __end_of_int_Port 057D                    ??_lcd_cmd 0070                       _strlen 0586  
                  ??_int_I2C 0070      __end_of__initialization 07FC               __pcstackCOMMON 0070  
                 __pbssBANK0 0020                ??_DS1307_read 0077                   __pmaintext 066D  
            bcd_to_ascii@bcd 0075                      ?_strlen 0070                    ?_lcd_data 0070  
                  ?_lcd_init 0070                   __stringtab 0003                    ?_int_Port 0070  
          bcd_to_ascii@value 0074          __end_of_DS1307_read 07F2     DS1307_read@slave_address 0077  
                    ___month 0022                      __ptext1 05A1                      __ptext2 05C0  
                    __ptext3 0586                      __ptext4 0577                      __ptext5 057D  
                    __ptext6 06C5                      __ptext7 063C                      __ptext8 05E3  
                    __ptext9 060B                      _lcd_cmd 063C                      _int_I2C 057D  
               _lcd_caracter 05C0                   ??_lcd_data 0070                   ??_lcd_init 0073  
       end_of_initialization 07FC                   ??_int_Port 0070                      strlen@s 0073  
                  _PORTBbits 0006                   lcd_cmd@cmd 0072                  _DS1307_read 06C5  
             __end_of_strlen 05A1          start_initialization 07F2                     ??_strlen 0072  
                __pbssCOMMON 007C                    ___latbits 0002                ?_bcd_to_ascii 0070  
                  __pstrings 0003                     ?_lcd_cmd 0070                     ?_int_I2C 0070  
                   _PIR1bits 000C               ??_bcd_to_ascii 0073                  __stringbase 0008  
               ?_DS1307_read 0076           __end_of__stringtab 0009                     _lcd_data 060B  
                   _lcd_init 05A1                     _int_Port 0577         __end_of_bcd_to_ascii 060B  
                  stringcode 0003  DS1307_read@register_address 0076                     strlen@cp 0074  
                   stringdir 0003                     stringtab 0003                  _SSPCON2bits 0091  
              ?_lcd_caracter 0070  
